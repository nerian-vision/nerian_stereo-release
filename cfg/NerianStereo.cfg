#!/usr/bin/env python

PACKAGE='nerian_stereo'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

#from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *
from dynamic_reconfigure.parameter_generator_catkin import *

lvl = 0 #SensorLevels.RECONFIGURE_RUNNING

gen = ParameterGenerator()

gen.add("auto_exposure_mode", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("auto_exposure_roi_enabled", bool_t, lvl, "", False)
gen.add("auto_exposure_roi_height", int_t, lvl, "", 100, -2147483648, 2147483647)
gen.add("auto_exposure_roi_width", int_t, lvl, "", 100, -2147483648, 2147483647)
gen.add("auto_exposure_roi_x", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("auto_exposure_roi_y", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("auto_intensity_delta", double_t, lvl, "", 0.03, -2147483648, 2147483647)
gen.add("auto_maximum_exposure_time", double_t, lvl, "", 30000, -2147483648, 2147483647)
gen.add("auto_maximum_gain", double_t, lvl, "", 100, -2147483648, 2147483647)
gen.add("auto_recalibration_enabled", bool_t, lvl, "", True)
gen.add("auto_recalibration_permanent", bool_t, lvl, "", True)
gen.add("auto_skipped_frames", int_t, lvl, "", 2, -2147483648, 2147483647)
gen.add("auto_target_frame", int_t, lvl, "", 2, -2147483648, 2147483647)
gen.add("auto_target_intensity", double_t, lvl, "", 0.33, -2147483648, 2147483647)
gen.add("consistency_check_enabled", bool_t, lvl, "", True)
gen.add("consistency_check_sensitivity", int_t, lvl, "", 13, -2147483648, 2147483647)
gen.add("disparity_offset", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("gap_interpolation_enabled", bool_t, lvl, "", True)
gen.add("manual_exposure_time", double_t, lvl, "", 10000, -2147483648, 2147483647)
gen.add("manual_gain", double_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("mask_border_pixels_enabled", bool_t, lvl, "", True)
gen.add("max_frame_time_difference_ms", int_t, lvl, "", 10, -2147483648, 2147483647)
gen.add("noise_reduction_enabled", bool_t, lvl, "", True)
gen.add("number_of_disparities", int_t, lvl, "", 128, -2147483648, 2147483647)
gen.add("operation_mode", int_t, lvl, "", 2, -2147483648, 2147483647)
gen.add("reboot", bool_t, lvl, "", False)
gen.add("sgm_p1_edge", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("sgm_p2_edge", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("sgm_p1_no_edge", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("sgm_p2_no_edge", int_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("speckle_filter_iterations", int_t, lvl, "", 2, -2147483648, 2147483647)
gen.add("texture_filter_enabled", bool_t, lvl, "", True)
gen.add("texture_filter_sensitivity", int_t, lvl, "", 10, -2147483648, 2147483647)
gen.add("trigger_0_enabled", bool_t, lvl, "", True)
gen.add("trigger_0_polarity", bool_t, lvl, "", False)
gen.add("trigger_0_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_0b_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_0c_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_0d_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_1_enabled", bool_t, lvl, "", False)
gen.add("trigger_1_polarity", bool_t, lvl, "", False)
gen.add("trigger_1_offset", double_t, lvl, "", 0, -2147483648, 2147483647)
gen.add("trigger_1_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_1b_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_1c_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_1d_pulse_width", double_t, lvl, "", 1, -2147483648, 2147483647)
gen.add("trigger_frequency", double_t, lvl, "", 20, -2147483648, 2147483647)
gen.add("uniqueness_check_enabled", bool_t, lvl, "", True)
gen.add("uniqueness_check_sensitivity", int_t, lvl, "", 65, -2147483648, 2147483647)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "NerianStereo"))

